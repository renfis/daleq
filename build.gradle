/*
 * Copyright 2012 brands4friends, Private Sale GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Daleq Framework'

apply from: script('dependencies')
apply plugin: "sonar"
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://jcenter.bintray.com/'
        }
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

sonar {
    server {
        url = propertyOr('sonar.host.url', null)
    }
    database {
        url = propertyOr('sonar.jdbc.url', null)
        driverClassName = propertyOr('sonar.jdbc.driver', null)
        username = propertyOr('sonar.jdbc.username', null)
        password = propertyOr('sonar.jdbc.password', null)
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'project-report'

    group = 'de.brands4friends.daleq'
    version = '0.5.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply from: script('issues')

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile deps.junit
        testCompile deps.hamcrest
        testCompile deps.easymock
        // We do not expose slf4j on our own, only tests will require it, since DbUnit uses it.
        testRuntime deps.slf4jSimple
    }

    test {
        maxHeapSize '400M'
        maxParallelForks 10
    }

    checkstyle {
        configFile file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        configProperties.checkstyleConfigDir = configFile.parentFile
    }

    pmd {
        ruleSets = []
        ruleSetFiles = fileTree(dir: "${rootProject.projectDir}/config/pmd", include: '*.xml')
    }

    sonar {
        project {
            sourceEncoding = "UTF-8"
        }
    }
}

apply from: script('clover')

File script(String name) {
    project.file("${rootProject.projectDir}/gradle/${name}.gradle")
}

String propertyOr(propName, defaultProp) {
    if (!project.hasProperty(propName)) {
        return defaultProp
    }
    return project.getProperty(propName)
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
